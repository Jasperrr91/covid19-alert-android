// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.72'

    ext {

        // global variables
        compile_sdk_version = 29
        min_sdk_version = 21
        core_ktx = '1.2.0'

        androidx_compat = '1.1.0'
        constrain_version = "2.0.0-beta4"
        swiperefresh = "1.0.0"
        recyclerview_ver = "1.2.0-alpha01"

        kotlin_std = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
        app_compat = "androidx.appcompat:appcompat:$androidx_compat"
        kotlin_core_ktx = "androidx.core:core-ktx:$core_ktx"
        def refreshlayout = "androidx.swiperefreshlayout:swiperefreshlayout:$swiperefresh"
        recyclerview = "androidx.recyclerview:recyclerview:$recyclerview_ver"
        constrain = "androidx.constraintlayout:constraintlayout:$constrain_version"
        google_component = 'com.google.android.material:material:1.1.0'
        card_view = "androidx.cardview:cardview:1.0.0"
        view_pager = "androidx.viewpager2:viewpager2:1.0.0"
        dots_indicator = 'com.tbuonomo.andrui:viewpagerdotsindicator:4.1.2'

        //koin
        koin_version = '2.1.5'
        koin = "org.koin:koin-android:$koin_version"
        def koin_viewmodel = "org.koin:koin-androidx-viewmodel:$koin_version"
        def koin_scope = "org.koin:koin-androidx-scope:$koin_version"

        //rxjava
        rxkotlin_version = '2.4.0'
        rx_kotlin = "io.reactivex.rxjava2:rxkotlin:$rxkotlin_version"
        rx_android = "io.reactivex.rxjava2:rxandroid:2.1.1"


        //mvvm
        lifecycle = '2.2.0'
        def livedata_version = '2.3.0-alpha01'
        def view_model = "androidx.lifecycle:lifecycle-viewmodel:$lifecycle"
        def view_model_ext = "androidx.lifecycle:lifecycle-extensions:$lifecycle"
        def view_model_live_data = "androidx.lifecycle:lifecycle-livedata-ktx:$livedata_version"
        def lifecycle_runtime = "androidx.lifecycle:lifecycle-runtime-ktx:2.2.0-alpha01"
        def view_model_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle"

        //navigation
        nav_version = "2.3.0-alpha04"
        def navigation = "androidx.navigation:navigation-fragment-ktx:$nav_version"
        def ui_navigation = "androidx.navigation:navigation-ui-ktx:$nav_version"

        //networking
        retrofit_gson_version = '2.6.2'
        retrofit_version = '2.6.2'

        gson = "com.squareup.retrofit2:converter-gson:$retrofit_gson_version"
        retrofit = "com.squareup.retrofit2:retrofit:$retrofit_version"
        def logging = 'com.squareup.okhttp3:logging-interceptor:3.12.0'

        def ok_http = 'com.squareup.okhttp3:okhttp:3.12.0'
        def rxjava_adapter = "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"


        //unit tests
        kotlin_test_ver = '3.4.2'
        def mockito_kotlin = "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
        def kotlin_junit = "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}"
        def kotlin_test = "io.kotlintest:kotlintest-runner-junit5:$kotlin_test_ver"
        def kotlin_test4 = "io.kotlintest:kotlintest-runner-junit4:$kotlin_test_ver"
        atchitcture_component_test = "androidx.arch.core:core-testing:2.1.0"


        //android testing
        def testRunnerVersion = "1.2.0"
        def test_runner = "androidx.test:runner:$testRunnerVersion"
        def test_rules = "androidx.test:rules:$testRunnerVersion"

        //navigation
        ext.nav_version = "2.2.0"
        ext.navigation = "androidx.navigation:navigation-fragment-ktx:$nav_version"
        ext.ui_navigation = "androidx.navigation:navigation-ui-ktx:$nav_version"


        //coroutines
        def coroutines_android_version = '1.3.5'
        def coroutines_android_version_test = '1.3.5'
        coroutines_core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_android_version"
        coroutines_android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:${coroutines_android_version}"

        corouines_test = "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_android_version_test"
        standards = [
                kotlin_std, app_compat, kotlin_core_ktx, refreshlayout, recyclerview, google_component
        ]

        mvvms = [
                view_model, view_model_ext, view_model_live_data, view_model_ktx, lifecycle_runtime
        ]

        depedency_injection = [
                koin
        ]
        depedency_injections = [
                koin, koin_viewmodel, koin_scope
        ]

        networking = [
                retrofit, gson, logging
        ]
        rxjavas = [
                rx_kotlin, rx_android
        ]

        unit_tests = [
                mockito_kotlin, kotlin_junit, kotlin_test
        ]
        unit_tests4 = [
                mockito_kotlin, kotlin_junit, kotlin_test4
        ]
        navigations = [
                navigation, ui_navigation
        ]

        coroutines = [
                coroutines_core, coroutines_android
        ]
        android_integration_test = [
                test_runner, test_rules
        ]
        view_pagers = [
                view_pager, dots_indicator
        ]


        //beacons
        ext.beacon = 'org.altbeacon:android-beacon-library:2+'
        beacons = [
                beacon
        ]

        //room
        def room_version = '2.2.5'
        def room = "androidx.room:room-ktx:$room_version"
        room_kapt = "androidx.room:room-compiler:$room_version"
        database = [
                room
        ]
        database_kapt = [
                room_kapt
        ]

        ///firebase
        def analitics = 'com.google.firebase:firebase-analytics:17.2.3'
        def crashlitics = 'com.google.firebase:firebase-crashlytics:17.0.0-beta02'
        fcm = 'com.google.firebase:firebase-messaging:20.1.2'
        dynamic_links = "com.google.firebase:firebase-dynamic-links-ktx:19.1.0"

        def location = "com.google.android.gms:play-services-location:17.0.0"
        firebase = [
                analitics, crashlitics
        ]
        locations = [
                location
        ]
        picasso = 'com.squareup.picasso:picasso:2.71828'
        crop = 'com.theartofdev.edmodo:android-image-cropper:2.8.+'

        //qrcode scan
        scannerqr = 'com.journeyapps:zxing-android-embedded:3.6.0'
        corescannerqr = 'com.google.zxing:core:3.3.0'
        qrcodescanner = [
                scannerqr, corescannerqr
        ]

    }
    repositories {
        google()
        jcenter()


    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.gms:google-services:4.3.3'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.0.0-beta04'
        classpath "org.koin:koin-gradle-plugin:$koin_version"
    }
}
apply plugin: 'koin'
allprojects {
    repositories {
        google()
        jcenter()

    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
